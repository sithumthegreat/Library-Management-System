/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edu.ijse.coursework.view;

import edu.ijse.coursework.controller.BookController;
import edu.ijse.coursework.controller.BorrowController;
import edu.ijse.coursework.controller.MemberController;
import edu.ijse.coursework.dto.BookDto;
import edu.ijse.coursework.dto.BorrowDto;
import edu.ijse.coursework.dto.MemberDto;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sithum
 */
public class BorrowView extends javax.swing.JFrame {
    private final BorrowController BORROW_CONTROLLER;
    private final MemberController MEMBER_CONTROLLER;
    private final BookController BOOK_CONTROLLER;
    private final ArrayList<BorrowDto> borrowDtos=new ArrayList<>();

    /**
     * Creates new form BorrowView
     */
    public BorrowView()throws Exception{
        this.BORROW_CONTROLLER=new BorrowController();
        this.MEMBER_CONTROLLER=new MemberController();
        this.BOOK_CONTROLLER=new BookController();
        initComponents();
        loadTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        memberIdLabel = new javax.swing.JLabel();
        memberIdField = new javax.swing.JTextField();
        bookIdLabel = new javax.swing.JLabel();
        bookIdField = new javax.swing.JTextField();
        issueDateLabel = new javax.swing.JLabel();
        issuDatePicker = new com.toedter.calendar.JDateChooser();
        returnDateLabel = new javax.swing.JLabel();
        returnDatePicker = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        borrowTable = new javax.swing.JTable();
        addToTable = new javax.swing.JButton();
        placeBorrow = new javax.swing.JButton();
        memberSearchButton = new javax.swing.JButton();
        bookSearchButton = new javax.swing.JButton();
        bookDataLabel = new javax.swing.JLabel();
        memberDataLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        memberIdLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        memberIdLabel.setText("Member ID");

        memberIdField.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        bookIdLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bookIdLabel.setText("Book ID");

        bookIdField.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        issueDateLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        issueDateLabel.setText("Issue Date");

        returnDateLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        returnDateLabel.setText("Return Date");

        borrowTable.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        borrowTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(borrowTable);

        addToTable.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        addToTable.setText("Add To Table");
        addToTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToTableActionPerformed(evt);
            }
        });

        placeBorrow.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        placeBorrow.setText("Place Borrow");
        placeBorrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placeBorrowActionPerformed(evt);
            }
        });

        memberSearchButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        memberSearchButton.setText("Search");
        memberSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memberSearchButtonActionPerformed(evt);
            }
        });

        bookSearchButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bookSearchButton.setText("Search");
        bookSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookSearchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(bookIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bookIdField, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(bookSearchButton)
                                        .addGap(18, 18, 18)
                                        .addComponent(bookDataLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(memberIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(memberIdField, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(memberSearchButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(memberDataLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(returnDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(issueDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(returnDatePicker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(issuDatePicker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(addToTable)
                                        .addGap(18, 18, 18)
                                        .addComponent(placeBorrow, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(9, 9, 9)))))
                        .addGap(0, 25, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(memberIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(memberIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(memberSearchButton))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bookIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(bookIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(bookSearchButton))
                            .addComponent(bookDataLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(memberDataLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(issuDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(issueDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(returnDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(returnDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(placeBorrow)
                    .addComponent(addToTable))
                .addGap(41, 41, 41)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void memberSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memberSearchButtonActionPerformed
        try {
            // TODO add your handling code here:
            searchMember();
        } catch (Exception ex) {
            Logger.getLogger(BorrowView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_memberSearchButtonActionPerformed

    private void bookSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookSearchButtonActionPerformed
        try {
            // TODO add your handling code here:
            searchBook();
        } catch (Exception ex) {
            Logger.getLogger(BorrowView.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_bookSearchButtonActionPerformed

    private void addToTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToTableActionPerformed
        try {
            // TODO add your handling code here:
            addToTable();
        } catch (Exception ex) {
            Logger.getLogger(BorrowView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addToTableActionPerformed

    private void placeBorrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placeBorrowActionPerformed
        try {
            // TODO add your handling code here:
            placeBorrow();
        } catch (Exception ex) {
            Logger.getLogger(BorrowView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_placeBorrowActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BorrowView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BorrowView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BorrowView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BorrowView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new BorrowView().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(BorrowView.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    public void searchMember()throws Exception{
        try {
            String id=memberIdField.getText();
            MemberDto dto=MEMBER_CONTROLLER.get(id);
            if (dto!=null){
                memberDataLabel.setText(dto.getName()+"-"+dto.getContactInfo()+"-"+dto.getAddress());
            }else{
                memberDataLabel.setText("Member Not Found!");
            }
            
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        
    }
    
    public void searchBook()throws Exception{
        try {
            String id=bookIdField.getText();
            BookDto dto=BOOK_CONTROLLER.get(id);
            if (dto!=null){
                bookDataLabel.setText(dto.getBookName()+"-"+dto.getAuthor()+"- COUNT-"+dto.getCount());
            }else{
                bookDataLabel.setText("Book Not Found");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        
    }
    
    public void loadTable()throws Exception{
        String columns[]={"Member ID","Book ID","Issue Date","Return Date"};
        DefaultTableModel dtm=new DefaultTableModel(columns,0){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
            }
            
        };
        
        borrowTable.setModel(dtm);       
    }
    
    public void addToTable()throws Exception{
        BorrowDto dto=new BorrowDto();
        dto.setMemberId(memberIdField.getText());
        dto.setBookId(bookIdField.getText());
        dto.setIssueDate(issuDatePicker.getDate());
        dto.setReturnDate(returnDatePicker.getDate());
        
        borrowDtos.add(dto);
        Object rowData[]={dto.getMemberId(),dto.getBookId(),dto.getIssueDate(),dto.getReturnDate()};
        DefaultTableModel dtm=(DefaultTableModel)borrowTable.getModel();
        dtm.addRow(rowData);
        
        
    }
    
    public void placeBorrow()throws Exception{
        try {
            BorrowDto borrowDto=new BorrowDto();
            borrowDto.setMemberId(memberIdField.getText());
            borrowDto.setBookId(bookIdField.getText());
            borrowDto.setIssueDate(issuDatePicker.getDate());
            borrowDto.setReturnDate(returnDatePicker.getDate());
            
            String rsp=BORROW_CONTROLLER.placeBorrow(borrowDto);
            JOptionPane.showMessageDialog(this, rsp);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        
    }
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addToTable;
    private javax.swing.JLabel bookDataLabel;
    private javax.swing.JTextField bookIdField;
    private javax.swing.JLabel bookIdLabel;
    private javax.swing.JButton bookSearchButton;
    private javax.swing.JTable borrowTable;
    private com.toedter.calendar.JDateChooser issuDatePicker;
    private javax.swing.JLabel issueDateLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel memberDataLabel;
    private javax.swing.JTextField memberIdField;
    private javax.swing.JLabel memberIdLabel;
    private javax.swing.JButton memberSearchButton;
    private javax.swing.JButton placeBorrow;
    private javax.swing.JLabel returnDateLabel;
    private com.toedter.calendar.JDateChooser returnDatePicker;
    // End of variables declaration//GEN-END:variables
}
